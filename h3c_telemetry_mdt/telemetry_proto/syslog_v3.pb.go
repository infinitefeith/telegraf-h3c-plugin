// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: syslog_v3.proto

package telemetry

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Syslog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration    *Syslog_MsgConfiguration    `protobuf:"bytes,1,opt,name=Configuration,proto3" json:"Configuration,omitempty"`
	LogBuffer        *Syslog_MsgLogBuffer        `protobuf:"bytes,2,opt,name=LogBuffer,proto3" json:"LogBuffer,omitempty"`
	Logs             *Syslog_MsgLogs             `protobuf:"bytes,3,opt,name=Logs,proto3" json:"Logs,omitempty"`
	LogHosts         *Syslog_MsgLogHosts         `protobuf:"bytes,4,opt,name=LogHosts,proto3" json:"LogHosts,omitempty"`
	OutputRules      *Syslog_MsgOutputRules      `protobuf:"bytes,5,opt,name=OutputRules,proto3" json:"OutputRules,omitempty"`
	IndependLogInfos *Syslog_MsgIndependLogInfos `protobuf:"bytes,6,opt,name=IndependLogInfos,proto3" json:"IndependLogInfos,omitempty"`
	IndependLogCfgs  *Syslog_MsgIndependLogCfgs  `protobuf:"bytes,7,opt,name=IndependLogCfgs,proto3" json:"IndependLogCfgs,omitempty"`
	IndependLogCount *Syslog_MsgIndependLogCount `protobuf:"bytes,8,opt,name=IndependLogCount,proto3" json:"IndependLogCount,omitempty"`
	LOGEvent         *Syslog_MsgLOGEvent         `protobuf:"bytes,9,opt,name=LOGEvent,proto3" json:"LOGEvent,omitempty"`
}

func (x *Syslog) Reset() {
	*x = Syslog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog) ProtoMessage() {}

func (x *Syslog) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog.ProtoReflect.Descriptor instead.
func (*Syslog) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0}
}

func (x *Syslog) GetConfiguration() *Syslog_MsgConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *Syslog) GetLogBuffer() *Syslog_MsgLogBuffer {
	if x != nil {
		return x.LogBuffer
	}
	return nil
}

func (x *Syslog) GetLogs() *Syslog_MsgLogs {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Syslog) GetLogHosts() *Syslog_MsgLogHosts {
	if x != nil {
		return x.LogHosts
	}
	return nil
}

func (x *Syslog) GetOutputRules() *Syslog_MsgOutputRules {
	if x != nil {
		return x.OutputRules
	}
	return nil
}

func (x *Syslog) GetIndependLogInfos() *Syslog_MsgIndependLogInfos {
	if x != nil {
		return x.IndependLogInfos
	}
	return nil
}

func (x *Syslog) GetIndependLogCfgs() *Syslog_MsgIndependLogCfgs {
	if x != nil {
		return x.IndependLogCfgs
	}
	return nil
}

func (x *Syslog) GetIndependLogCount() *Syslog_MsgIndependLogCount {
	if x != nil {
		return x.IndependLogCount
	}
	return nil
}

func (x *Syslog) GetLOGEvent() *Syslog_MsgLOGEvent {
	if x != nil {
		return x.LOGEvent
	}
	return nil
}

type Syslog_MsgConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State                   string `protobuf:"bytes,1,opt,name=State,proto3" json:"State,omitempty"`
	DuplicateLogSuppression string `protobuf:"bytes,2,opt,name=DuplicateLogSuppression,proto3" json:"DuplicateLogSuppression,omitempty"`
}

func (x *Syslog_MsgConfiguration) Reset() {
	*x = Syslog_MsgConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog_MsgConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_MsgConfiguration) ProtoMessage() {}

func (x *Syslog_MsgConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_MsgConfiguration.ProtoReflect.Descriptor instead.
func (*Syslog_MsgConfiguration) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Syslog_MsgConfiguration) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Syslog_MsgConfiguration) GetDuplicateLogSuppression() string {
	if x != nil {
		return x.DuplicateLogSuppression
	}
	return ""
}

type Syslog_MsgLogBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State                string                                       `protobuf:"bytes,1,opt,name=State,proto3" json:"State,omitempty"`
	BufferSize           uint32                                       `protobuf:"varint,2,opt,name=BufferSize,proto3" json:"BufferSize,omitempty"`
	BufferSizeLimit      uint32                                       `protobuf:"varint,3,opt,name=BufferSizeLimit,proto3" json:"BufferSizeLimit,omitempty"`
	LogsCount            uint32                                       `protobuf:"varint,4,opt,name=LogsCount,proto3" json:"LogsCount,omitempty"`
	DroppedLogsCount     uint32                                       `protobuf:"varint,5,opt,name=DroppedLogsCount,proto3" json:"DroppedLogsCount,omitempty"`
	OverwrittenLogsCount uint32                                       `protobuf:"varint,6,opt,name=OverwrittenLogsCount,proto3" json:"OverwrittenLogsCount,omitempty"`
	LogsCountPerSeverity *Syslog_MsgLogBuffer_MsgLogsCountPerSeverity `protobuf:"bytes,7,opt,name=LogsCountPerSeverity,proto3" json:"LogsCountPerSeverity,omitempty"`
}

func (x *Syslog_MsgLogBuffer) Reset() {
	*x = Syslog_MsgLogBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog_MsgLogBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_MsgLogBuffer) ProtoMessage() {}

func (x *Syslog_MsgLogBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_MsgLogBuffer.ProtoReflect.Descriptor instead.
func (*Syslog_MsgLogBuffer) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Syslog_MsgLogBuffer) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Syslog_MsgLogBuffer) GetBufferSize() uint32 {
	if x != nil {
		return x.BufferSize
	}
	return 0
}

func (x *Syslog_MsgLogBuffer) GetBufferSizeLimit() uint32 {
	if x != nil {
		return x.BufferSizeLimit
	}
	return 0
}

func (x *Syslog_MsgLogBuffer) GetLogsCount() uint32 {
	if x != nil {
		return x.LogsCount
	}
	return 0
}

func (x *Syslog_MsgLogBuffer) GetDroppedLogsCount() uint32 {
	if x != nil {
		return x.DroppedLogsCount
	}
	return 0
}

func (x *Syslog_MsgLogBuffer) GetOverwrittenLogsCount() uint32 {
	if x != nil {
		return x.OverwrittenLogsCount
	}
	return 0
}

func (x *Syslog_MsgLogBuffer) GetLogsCountPerSeverity() *Syslog_MsgLogBuffer_MsgLogsCountPerSeverity {
	if x != nil {
		return x.LogsCountPerSeverity
	}
	return nil
}

type Syslog_MsgLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log []*Syslog_MsgLogs_MsgLog `protobuf:"bytes,1,rep,name=Log,proto3" json:"Log,omitempty"`
}

func (x *Syslog_MsgLogs) Reset() {
	*x = Syslog_MsgLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog_MsgLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_MsgLogs) ProtoMessage() {}

func (x *Syslog_MsgLogs) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_MsgLogs.ProtoReflect.Descriptor instead.
func (*Syslog_MsgLogs) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Syslog_MsgLogs) GetLog() []*Syslog_MsgLogs_MsgLog {
	if x != nil {
		return x.Log
	}
	return nil
}

type Syslog_MsgLogHosts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host []*Syslog_MsgLogHosts_MsgHost `protobuf:"bytes,1,rep,name=Host,proto3" json:"Host,omitempty"`
}

func (x *Syslog_MsgLogHosts) Reset() {
	*x = Syslog_MsgLogHosts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog_MsgLogHosts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_MsgLogHosts) ProtoMessage() {}

func (x *Syslog_MsgLogHosts) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_MsgLogHosts.ProtoReflect.Descriptor instead.
func (*Syslog_MsgLogHosts) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Syslog_MsgLogHosts) GetHost() []*Syslog_MsgLogHosts_MsgHost {
	if x != nil {
		return x.Host
	}
	return nil
}

type Syslog_MsgOutputRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutputRule []*Syslog_MsgOutputRules_MsgOutputRule `protobuf:"bytes,1,rep,name=OutputRule,proto3" json:"OutputRule,omitempty"`
}

func (x *Syslog_MsgOutputRules) Reset() {
	*x = Syslog_MsgOutputRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog_MsgOutputRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_MsgOutputRules) ProtoMessage() {}

func (x *Syslog_MsgOutputRules) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_MsgOutputRules.ProtoReflect.Descriptor instead.
func (*Syslog_MsgOutputRules) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Syslog_MsgOutputRules) GetOutputRule() []*Syslog_MsgOutputRules_MsgOutputRule {
	if x != nil {
		return x.OutputRule
	}
	return nil
}

type Syslog_MsgIndependLogInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndependLogInfo []*Syslog_MsgIndependLogInfos_MsgIndependLogInfo `protobuf:"bytes,1,rep,name=IndependLogInfo,proto3" json:"IndependLogInfo,omitempty"`
}

func (x *Syslog_MsgIndependLogInfos) Reset() {
	*x = Syslog_MsgIndependLogInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog_MsgIndependLogInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_MsgIndependLogInfos) ProtoMessage() {}

func (x *Syslog_MsgIndependLogInfos) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_MsgIndependLogInfos.ProtoReflect.Descriptor instead.
func (*Syslog_MsgIndependLogInfos) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Syslog_MsgIndependLogInfos) GetIndependLogInfo() []*Syslog_MsgIndependLogInfos_MsgIndependLogInfo {
	if x != nil {
		return x.IndependLogInfo
	}
	return nil
}

type Syslog_MsgIndependLogCfgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndependLogCfg []*Syslog_MsgIndependLogCfgs_MsgIndependLogCfg `protobuf:"bytes,1,rep,name=IndependLogCfg,proto3" json:"IndependLogCfg,omitempty"`
}

func (x *Syslog_MsgIndependLogCfgs) Reset() {
	*x = Syslog_MsgIndependLogCfgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog_MsgIndependLogCfgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_MsgIndependLogCfgs) ProtoMessage() {}

func (x *Syslog_MsgIndependLogCfgs) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_MsgIndependLogCfgs.ProtoReflect.Descriptor instead.
func (*Syslog_MsgIndependLogCfgs) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Syslog_MsgIndependLogCfgs) GetIndependLogCfg() []*Syslog_MsgIndependLogCfgs_MsgIndependLogCfg {
	if x != nil {
		return x.IndependLogCfg
	}
	return nil
}

type Syslog_MsgIndependLogCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleName    string `protobuf:"bytes,1,opt,name=ModuleName,proto3" json:"ModuleName,omitempty"`
	SubModuleName string `protobuf:"bytes,2,opt,name=SubModuleName,proto3" json:"SubModuleName,omitempty"`
	CountFilter   string `protobuf:"bytes,3,opt,name=CountFilter,proto3" json:"CountFilter,omitempty"`
	Count         uint32 `protobuf:"varint,4,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *Syslog_MsgIndependLogCount) Reset() {
	*x = Syslog_MsgIndependLogCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog_MsgIndependLogCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_MsgIndependLogCount) ProtoMessage() {}

func (x *Syslog_MsgIndependLogCount) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_MsgIndependLogCount.ProtoReflect.Descriptor instead.
func (*Syslog_MsgIndependLogCount) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Syslog_MsgIndependLogCount) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *Syslog_MsgIndependLogCount) GetSubModuleName() string {
	if x != nil {
		return x.SubModuleName
	}
	return ""
}

func (x *Syslog_MsgIndependLogCount) GetCountFilter() string {
	if x != nil {
		return x.CountFilter
	}
	return ""
}

func (x *Syslog_MsgIndependLogCount) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Syslog_MsgLOGEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LOG []*Syslog_MsgLOGEvent_MsgLOG `protobuf:"bytes,1,rep,name=LOG,proto3" json:"LOG,omitempty"`
}

func (x *Syslog_MsgLOGEvent) Reset() {
	*x = Syslog_MsgLOGEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog_MsgLOGEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_MsgLOGEvent) ProtoMessage() {}

func (x *Syslog_MsgLOGEvent) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_MsgLOGEvent.ProtoReflect.Descriptor instead.
func (*Syslog_MsgLOGEvent) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0, 8}
}

func (x *Syslog_MsgLOGEvent) GetLOG() []*Syslog_MsgLOGEvent_MsgLOG {
	if x != nil {
		return x.LOG
	}
	return nil
}

type Syslog_MsgLogBuffer_MsgLogsCountPerSeverity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emergency     uint32 `protobuf:"varint,1,opt,name=Emergency,proto3" json:"Emergency,omitempty"`
	Alert         uint32 `protobuf:"varint,2,opt,name=Alert,proto3" json:"Alert,omitempty"`
	Critical      uint32 `protobuf:"varint,3,opt,name=Critical,proto3" json:"Critical,omitempty"`
	Error         uint32 `protobuf:"varint,4,opt,name=Error,proto3" json:"Error,omitempty"`
	Warning       uint32 `protobuf:"varint,5,opt,name=Warning,proto3" json:"Warning,omitempty"`
	Notice        uint32 `protobuf:"varint,6,opt,name=Notice,proto3" json:"Notice,omitempty"`
	Informational uint32 `protobuf:"varint,7,opt,name=Informational,proto3" json:"Informational,omitempty"`
	Debug         uint32 `protobuf:"varint,8,opt,name=Debug,proto3" json:"Debug,omitempty"`
}

func (x *Syslog_MsgLogBuffer_MsgLogsCountPerSeverity) Reset() {
	*x = Syslog_MsgLogBuffer_MsgLogsCountPerSeverity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog_MsgLogBuffer_MsgLogsCountPerSeverity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_MsgLogBuffer_MsgLogsCountPerSeverity) ProtoMessage() {}

func (x *Syslog_MsgLogBuffer_MsgLogsCountPerSeverity) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_MsgLogBuffer_MsgLogsCountPerSeverity.ProtoReflect.Descriptor instead.
func (*Syslog_MsgLogBuffer_MsgLogsCountPerSeverity) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Syslog_MsgLogBuffer_MsgLogsCountPerSeverity) GetEmergency() uint32 {
	if x != nil {
		return x.Emergency
	}
	return 0
}

func (x *Syslog_MsgLogBuffer_MsgLogsCountPerSeverity) GetAlert() uint32 {
	if x != nil {
		return x.Alert
	}
	return 0
}

func (x *Syslog_MsgLogBuffer_MsgLogsCountPerSeverity) GetCritical() uint32 {
	if x != nil {
		return x.Critical
	}
	return 0
}

func (x *Syslog_MsgLogBuffer_MsgLogsCountPerSeverity) GetError() uint32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *Syslog_MsgLogBuffer_MsgLogsCountPerSeverity) GetWarning() uint32 {
	if x != nil {
		return x.Warning
	}
	return 0
}

func (x *Syslog_MsgLogBuffer_MsgLogsCountPerSeverity) GetNotice() uint32 {
	if x != nil {
		return x.Notice
	}
	return 0
}

func (x *Syslog_MsgLogBuffer_MsgLogsCountPerSeverity) GetInformational() uint32 {
	if x != nil {
		return x.Informational
	}
	return 0
}

func (x *Syslog_MsgLogBuffer_MsgLogsCountPerSeverity) GetDebug() uint32 {
	if x != nil {
		return x.Debug
	}
	return 0
}

type Syslog_MsgLogs_MsgLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index    uint32 `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	Time     string `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`
	Group    string `protobuf:"bytes,3,opt,name=Group,proto3" json:"Group,omitempty"`
	Digest   string `protobuf:"bytes,4,opt,name=Digest,proto3" json:"Digest,omitempty"`
	Severity uint32 `protobuf:"varint,5,opt,name=Severity,proto3" json:"Severity,omitempty"`
	Content  string `protobuf:"bytes,6,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *Syslog_MsgLogs_MsgLog) Reset() {
	*x = Syslog_MsgLogs_MsgLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog_MsgLogs_MsgLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_MsgLogs_MsgLog) ProtoMessage() {}

func (x *Syslog_MsgLogs_MsgLog) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_MsgLogs_MsgLog.ProtoReflect.Descriptor instead.
func (*Syslog_MsgLogs_MsgLog) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *Syslog_MsgLogs_MsgLog) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Syslog_MsgLogs_MsgLog) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *Syslog_MsgLogs_MsgLog) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Syslog_MsgLogs_MsgLog) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *Syslog_MsgLogs_MsgLog) GetSeverity() uint32 {
	if x != nil {
		return x.Severity
	}
	return 0
}

func (x *Syslog_MsgLogs_MsgLog) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Syslog_MsgLogHosts_MsgHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  string `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	VRF      string `protobuf:"bytes,2,opt,name=VRF,proto3" json:"VRF,omitempty"`
	Port     uint32 `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	Facility uint32 `protobuf:"varint,4,opt,name=Facility,proto3" json:"Facility,omitempty"`
}

func (x *Syslog_MsgLogHosts_MsgHost) Reset() {
	*x = Syslog_MsgLogHosts_MsgHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog_MsgLogHosts_MsgHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_MsgLogHosts_MsgHost) ProtoMessage() {}

func (x *Syslog_MsgLogHosts_MsgHost) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_MsgLogHosts_MsgHost.ProtoReflect.Descriptor instead.
func (*Syslog_MsgLogHosts_MsgHost) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *Syslog_MsgLogHosts_MsgHost) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Syslog_MsgLogHosts_MsgHost) GetVRF() string {
	if x != nil {
		return x.VRF
	}
	return ""
}

func (x *Syslog_MsgLogHosts_MsgHost) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Syslog_MsgLogHosts_MsgHost) GetFacility() uint32 {
	if x != nil {
		return x.Facility
	}
	return 0
}

type Syslog_MsgOutputRules_MsgOutputRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination uint32 `protobuf:"varint,1,opt,name=Destination,proto3" json:"Destination,omitempty"`
	MouduleName string `protobuf:"bytes,2,opt,name=MouduleName,proto3" json:"MouduleName,omitempty"`
	Rule        string `protobuf:"bytes,3,opt,name=Rule,proto3" json:"Rule,omitempty"`
}

func (x *Syslog_MsgOutputRules_MsgOutputRule) Reset() {
	*x = Syslog_MsgOutputRules_MsgOutputRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog_MsgOutputRules_MsgOutputRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_MsgOutputRules_MsgOutputRule) ProtoMessage() {}

func (x *Syslog_MsgOutputRules_MsgOutputRule) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_MsgOutputRules_MsgOutputRule.ProtoReflect.Descriptor instead.
func (*Syslog_MsgOutputRules_MsgOutputRule) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0, 4, 0}
}

func (x *Syslog_MsgOutputRules_MsgOutputRule) GetDestination() uint32 {
	if x != nil {
		return x.Destination
	}
	return 0
}

func (x *Syslog_MsgOutputRules_MsgOutputRule) GetMouduleName() string {
	if x != nil {
		return x.MouduleName
	}
	return ""
}

func (x *Syslog_MsgOutputRules_MsgOutputRule) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

type Syslog_MsgIndependLogInfos_MsgIndependLogInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleName    string `protobuf:"bytes,1,opt,name=ModuleName,proto3" json:"ModuleName,omitempty"`
	SubModuleName string `protobuf:"bytes,2,opt,name=SubModuleName,proto3" json:"SubModuleName,omitempty"`
	Index         uint32 `protobuf:"varint,3,opt,name=Index,proto3" json:"Index,omitempty"`
	Time          string `protobuf:"bytes,4,opt,name=Time,proto3" json:"Time,omitempty"`
	Digest        string `protobuf:"bytes,5,opt,name=Digest,proto3" json:"Digest,omitempty"`
	Severity      uint32 `protobuf:"varint,6,opt,name=Severity,proto3" json:"Severity,omitempty"`
	Content       string `protobuf:"bytes,7,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *Syslog_MsgIndependLogInfos_MsgIndependLogInfo) Reset() {
	*x = Syslog_MsgIndependLogInfos_MsgIndependLogInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog_MsgIndependLogInfos_MsgIndependLogInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_MsgIndependLogInfos_MsgIndependLogInfo) ProtoMessage() {}

func (x *Syslog_MsgIndependLogInfos_MsgIndependLogInfo) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_MsgIndependLogInfos_MsgIndependLogInfo.ProtoReflect.Descriptor instead.
func (*Syslog_MsgIndependLogInfos_MsgIndependLogInfo) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0, 5, 0}
}

func (x *Syslog_MsgIndependLogInfos_MsgIndependLogInfo) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *Syslog_MsgIndependLogInfos_MsgIndependLogInfo) GetSubModuleName() string {
	if x != nil {
		return x.SubModuleName
	}
	return ""
}

func (x *Syslog_MsgIndependLogInfos_MsgIndependLogInfo) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Syslog_MsgIndependLogInfos_MsgIndependLogInfo) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *Syslog_MsgIndependLogInfos_MsgIndependLogInfo) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *Syslog_MsgIndependLogInfos_MsgIndependLogInfo) GetSeverity() uint32 {
	if x != nil {
		return x.Severity
	}
	return 0
}

func (x *Syslog_MsgIndependLogInfos_MsgIndependLogInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Syslog_MsgIndependLogCfgs_MsgIndependLogCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleName     string `protobuf:"bytes,1,opt,name=ModuleName,proto3" json:"ModuleName,omitempty"`
	BufferSize     uint32 `protobuf:"varint,2,opt,name=BufferSize,proto3" json:"BufferSize,omitempty"`
	AlarmThreshold uint32 `protobuf:"varint,3,opt,name=AlarmThreshold,proto3" json:"AlarmThreshold,omitempty"`
	MinAge         uint32 `protobuf:"varint,4,opt,name=MinAge,proto3" json:"MinAge,omitempty"`
	SizeQuota      uint32 `protobuf:"varint,5,opt,name=SizeQuota,proto3" json:"SizeQuota,omitempty"`
}

func (x *Syslog_MsgIndependLogCfgs_MsgIndependLogCfg) Reset() {
	*x = Syslog_MsgIndependLogCfgs_MsgIndependLogCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog_MsgIndependLogCfgs_MsgIndependLogCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_MsgIndependLogCfgs_MsgIndependLogCfg) ProtoMessage() {}

func (x *Syslog_MsgIndependLogCfgs_MsgIndependLogCfg) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_MsgIndependLogCfgs_MsgIndependLogCfg.ProtoReflect.Descriptor instead.
func (*Syslog_MsgIndependLogCfgs_MsgIndependLogCfg) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0, 6, 0}
}

func (x *Syslog_MsgIndependLogCfgs_MsgIndependLogCfg) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *Syslog_MsgIndependLogCfgs_MsgIndependLogCfg) GetBufferSize() uint32 {
	if x != nil {
		return x.BufferSize
	}
	return 0
}

func (x *Syslog_MsgIndependLogCfgs_MsgIndependLogCfg) GetAlarmThreshold() uint32 {
	if x != nil {
		return x.AlarmThreshold
	}
	return 0
}

func (x *Syslog_MsgIndependLogCfgs_MsgIndependLogCfg) GetMinAge() uint32 {
	if x != nil {
		return x.MinAge
	}
	return 0
}

func (x *Syslog_MsgIndependLogCfgs_MsgIndependLogCfg) GetSizeQuota() uint32 {
	if x != nil {
		return x.SizeQuota
	}
	return 0
}

type Syslog_MsgLOGEvent_MsgLOG struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group    string `protobuf:"bytes,1,opt,name=Group,proto3" json:"Group,omitempty"`
	Code     string `protobuf:"bytes,2,opt,name=Code,proto3" json:"Code,omitempty"`
	Severity uint32 `protobuf:"varint,3,opt,name=Severity,proto3" json:"Severity,omitempty"`
	Content  string `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *Syslog_MsgLOGEvent_MsgLOG) Reset() {
	*x = Syslog_MsgLOGEvent_MsgLOG{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_v3_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Syslog_MsgLOGEvent_MsgLOG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_MsgLOGEvent_MsgLOG) ProtoMessage() {}

func (x *Syslog_MsgLOGEvent_MsgLOG) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_v3_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_MsgLOGEvent_MsgLOG.ProtoReflect.Descriptor instead.
func (*Syslog_MsgLOGEvent_MsgLOG) Descriptor() ([]byte, []int) {
	return file_syslog_v3_proto_rawDescGZIP(), []int{0, 8, 0}
}

func (x *Syslog_MsgLOGEvent_MsgLOG) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Syslog_MsgLOGEvent_MsgLOG) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Syslog_MsgLOGEvent_MsgLOG) GetSeverity() uint32 {
	if x != nil {
		return x.Severity
	}
	return 0
}

func (x *Syslog_MsgLOGEvent_MsgLOG) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_syslog_v3_proto protoreflect.FileDescriptor

var file_syslog_v3_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x33, 0x22, 0xb9, 0x16, 0x0a,
	0x06, 0x53, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x12, 0x48, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x33, 0x2e, 0x53, 0x79, 0x73, 0x6c, 0x6f,
	0x67, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3c, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x33,
	0x2e, 0x53, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x42, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x52, 0x09, 0x4c, 0x6f, 0x67, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12,
	0x2d, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x33, 0x2e, 0x53, 0x79, 0x73, 0x6c, 0x6f, 0x67,
	0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x39,
	0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x33, 0x2e, 0x53, 0x79, 0x73,
	0x6c, 0x6f, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52,
	0x08, 0x4c, 0x6f, 0x67, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x0b, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x33, 0x2e, 0x53, 0x79, 0x73, 0x6c, 0x6f,
	0x67, 0x2e, 0x4d, 0x73, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x52, 0x0b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x51, 0x0a,
	0x10, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67,
	0x5f, 0x76, 0x33, 0x2e, 0x53, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x6e,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x10,
	0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x4e, 0x0a, 0x0f, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x43,
	0x66, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x79, 0x73, 0x6c,
	0x6f, 0x67, 0x5f, 0x76, 0x33, 0x2e, 0x53, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x2e, 0x4d, 0x73, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x43, 0x66, 0x67, 0x73, 0x52,
	0x0f, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x43, 0x66, 0x67, 0x73,
	0x12, 0x51, 0x0a, 0x10, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x79, 0x73,
	0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x33, 0x2e, 0x53, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x2e, 0x4d, 0x73,
	0x67, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x10, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x08, 0x4c, 0x4f, 0x47, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x5f, 0x76,
	0x33, 0x2e, 0x53, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x4f, 0x47, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x4c, 0x4f, 0x47, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x62,
	0x0a, 0x10, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x44, 0x75, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x44, 0x75, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x1a, 0xc8, 0x04, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x42, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x42,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x42, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x44, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x44, 0x72, 0x6f,
	0x70, 0x70, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x14, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x4c, 0x6f, 0x67, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x4f, 0x76, 0x65,
	0x72, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x6a, 0x0a, 0x14, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65,
	0x72, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x33, 0x2e, 0x53, 0x79, 0x73, 0x6c,
	0x6f, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e,
	0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x53,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x14, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x65, 0x72, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x1a, 0xed, 0x01,
	0x0a, 0x17, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65,
	0x72, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6d, 0x65,
	0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x45, 0x6d,
	0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x1a, 0xd6, 0x01,
	0x0a, 0x07, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x32, 0x0a, 0x03, 0x4c, 0x6f, 0x67,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x5f,
	0x76, 0x33, 0x2e, 0x53, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67,
	0x73, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x4c, 0x6f, 0x67, 0x1a, 0x96, 0x01,
	0x0a, 0x06, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0xaf, 0x01, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x4c, 0x6f,
	0x67, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x33,
	0x2e, 0x53, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x48, 0x6f,
	0x73, 0x74, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x48, 0x6f, 0x73,
	0x74, 0x1a, 0x65, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x52, 0x46, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x52, 0x46, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0xc9, 0x01, 0x0a, 0x0e, 0x4d, 0x73, 0x67,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0a, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x33, 0x2e, 0x53, 0x79, 0x73, 0x6c,
	0x6f, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x2e, 0x4d, 0x73, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x1a, 0x67, 0x0a, 0x0d, 0x4d,
	0x73, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x4d, 0x6f, 0x75, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x6f, 0x75, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x52, 0x75, 0x6c, 0x65, 0x1a, 0xce, 0x02, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x62, 0x0a, 0x0f,
	0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x5f, 0x76,
	0x33, 0x2e, 0x53, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2e, 0x4d, 0x73, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0f, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0xd2, 0x01, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x53, 0x75, 0x62, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0xa8, 0x02, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x43, 0x66, 0x67, 0x73, 0x12, 0x5e, 0x0a, 0x0e,
	0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x43, 0x66, 0x67, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x33,
	0x2e, 0x53, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x43, 0x66, 0x67, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x6e,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x43, 0x66, 0x67, 0x52, 0x0e, 0x49, 0x6e,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x43, 0x66, 0x67, 0x1a, 0xb1, 0x01, 0x0a,
	0x11, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x43,
	0x66, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x69,
	0x6e, 0x41, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4d, 0x69, 0x6e, 0x41,
	0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x7a, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x53, 0x69, 0x7a, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x1a, 0x93, 0x01, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x53, 0x75, 0x62, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xaf, 0x01, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x4c, 0x4f,
	0x47, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x03, 0x4c, 0x4f, 0x47, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x33, 0x2e,
	0x53, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x4f, 0x47, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x4f, 0x47, 0x52, 0x03, 0x4c, 0x4f, 0x47, 0x1a, 0x68,
	0x0a, 0x06, 0x4d, 0x73, 0x67, 0x4c, 0x4f, 0x47, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x3b, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_syslog_v3_proto_rawDescOnce sync.Once
	file_syslog_v3_proto_rawDescData = file_syslog_v3_proto_rawDesc
)

func file_syslog_v3_proto_rawDescGZIP() []byte {
	file_syslog_v3_proto_rawDescOnce.Do(func() {
		file_syslog_v3_proto_rawDescData = protoimpl.X.CompressGZIP(file_syslog_v3_proto_rawDescData)
	})
	return file_syslog_v3_proto_rawDescData
}

var file_syslog_v3_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_syslog_v3_proto_goTypes = []any{
	(*Syslog)(nil),                                        // 0: syslog_v3.Syslog
	(*Syslog_MsgConfiguration)(nil),                       // 1: syslog_v3.Syslog.MsgConfiguration
	(*Syslog_MsgLogBuffer)(nil),                           // 2: syslog_v3.Syslog.MsgLogBuffer
	(*Syslog_MsgLogs)(nil),                                // 3: syslog_v3.Syslog.MsgLogs
	(*Syslog_MsgLogHosts)(nil),                            // 4: syslog_v3.Syslog.MsgLogHosts
	(*Syslog_MsgOutputRules)(nil),                         // 5: syslog_v3.Syslog.MsgOutputRules
	(*Syslog_MsgIndependLogInfos)(nil),                    // 6: syslog_v3.Syslog.MsgIndependLogInfos
	(*Syslog_MsgIndependLogCfgs)(nil),                     // 7: syslog_v3.Syslog.MsgIndependLogCfgs
	(*Syslog_MsgIndependLogCount)(nil),                    // 8: syslog_v3.Syslog.MsgIndependLogCount
	(*Syslog_MsgLOGEvent)(nil),                            // 9: syslog_v3.Syslog.MsgLOGEvent
	(*Syslog_MsgLogBuffer_MsgLogsCountPerSeverity)(nil),   // 10: syslog_v3.Syslog.MsgLogBuffer.MsgLogsCountPerSeverity
	(*Syslog_MsgLogs_MsgLog)(nil),                         // 11: syslog_v3.Syslog.MsgLogs.MsgLog
	(*Syslog_MsgLogHosts_MsgHost)(nil),                    // 12: syslog_v3.Syslog.MsgLogHosts.MsgHost
	(*Syslog_MsgOutputRules_MsgOutputRule)(nil),           // 13: syslog_v3.Syslog.MsgOutputRules.MsgOutputRule
	(*Syslog_MsgIndependLogInfos_MsgIndependLogInfo)(nil), // 14: syslog_v3.Syslog.MsgIndependLogInfos.MsgIndependLogInfo
	(*Syslog_MsgIndependLogCfgs_MsgIndependLogCfg)(nil),   // 15: syslog_v3.Syslog.MsgIndependLogCfgs.MsgIndependLogCfg
	(*Syslog_MsgLOGEvent_MsgLOG)(nil),                     // 16: syslog_v3.Syslog.MsgLOGEvent.MsgLOG
}
var file_syslog_v3_proto_depIdxs = []int32{
	1,  // 0: syslog_v3.Syslog.Configuration:type_name -> syslog_v3.Syslog.MsgConfiguration
	2,  // 1: syslog_v3.Syslog.LogBuffer:type_name -> syslog_v3.Syslog.MsgLogBuffer
	3,  // 2: syslog_v3.Syslog.Logs:type_name -> syslog_v3.Syslog.MsgLogs
	4,  // 3: syslog_v3.Syslog.LogHosts:type_name -> syslog_v3.Syslog.MsgLogHosts
	5,  // 4: syslog_v3.Syslog.OutputRules:type_name -> syslog_v3.Syslog.MsgOutputRules
	6,  // 5: syslog_v3.Syslog.IndependLogInfos:type_name -> syslog_v3.Syslog.MsgIndependLogInfos
	7,  // 6: syslog_v3.Syslog.IndependLogCfgs:type_name -> syslog_v3.Syslog.MsgIndependLogCfgs
	8,  // 7: syslog_v3.Syslog.IndependLogCount:type_name -> syslog_v3.Syslog.MsgIndependLogCount
	9,  // 8: syslog_v3.Syslog.LOGEvent:type_name -> syslog_v3.Syslog.MsgLOGEvent
	10, // 9: syslog_v3.Syslog.MsgLogBuffer.LogsCountPerSeverity:type_name -> syslog_v3.Syslog.MsgLogBuffer.MsgLogsCountPerSeverity
	11, // 10: syslog_v3.Syslog.MsgLogs.Log:type_name -> syslog_v3.Syslog.MsgLogs.MsgLog
	12, // 11: syslog_v3.Syslog.MsgLogHosts.Host:type_name -> syslog_v3.Syslog.MsgLogHosts.MsgHost
	13, // 12: syslog_v3.Syslog.MsgOutputRules.OutputRule:type_name -> syslog_v3.Syslog.MsgOutputRules.MsgOutputRule
	14, // 13: syslog_v3.Syslog.MsgIndependLogInfos.IndependLogInfo:type_name -> syslog_v3.Syslog.MsgIndependLogInfos.MsgIndependLogInfo
	15, // 14: syslog_v3.Syslog.MsgIndependLogCfgs.IndependLogCfg:type_name -> syslog_v3.Syslog.MsgIndependLogCfgs.MsgIndependLogCfg
	16, // 15: syslog_v3.Syslog.MsgLOGEvent.LOG:type_name -> syslog_v3.Syslog.MsgLOGEvent.MsgLOG
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_syslog_v3_proto_init() }
func file_syslog_v3_proto_init() {
	if File_syslog_v3_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_syslog_v3_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_v3_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog_MsgConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_v3_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog_MsgLogBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_v3_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog_MsgLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_v3_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog_MsgLogHosts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_v3_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog_MsgOutputRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_v3_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog_MsgIndependLogInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_v3_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog_MsgIndependLogCfgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_v3_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog_MsgIndependLogCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_v3_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog_MsgLOGEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_v3_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog_MsgLogBuffer_MsgLogsCountPerSeverity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_v3_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog_MsgLogs_MsgLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_v3_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog_MsgLogHosts_MsgHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_v3_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog_MsgOutputRules_MsgOutputRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_v3_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog_MsgIndependLogInfos_MsgIndependLogInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_v3_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog_MsgIndependLogCfgs_MsgIndependLogCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_v3_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*Syslog_MsgLOGEvent_MsgLOG); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_syslog_v3_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_syslog_v3_proto_goTypes,
		DependencyIndexes: file_syslog_v3_proto_depIdxs,
		MessageInfos:      file_syslog_v3_proto_msgTypes,
	}.Build()
	File_syslog_v3_proto = out.File
	file_syslog_v3_proto_rawDesc = nil
	file_syslog_v3_proto_goTypes = nil
	file_syslog_v3_proto_depIdxs = nil
}
